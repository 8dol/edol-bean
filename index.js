export class Areas { constructor(areaId,parentId,areaName,sort,type,orgId,status,sex) {this.areaId=areaId;this.parentId=parentId;this.areaName=areaName;this.sort=sort;this.type=type;this.orgId=orgId;this.status=status;this.sex=sex}}
export class AuthRoleAndUserAddReq { constructor(roleId,rolesId,userId) {this.roleId=roleId;this.rolesId=rolesId;this.userId=userId}}
export class Box { constructor(id,boxNo,userId,masterUserId,roomId,roomNo,buildingId,buildingName,dormitoryAreaId,dormitoryAreaName,campusId,campusName,creditLine,createTime,updateTime,status,boxGoodsList,userName,masterUserMobile,userMobile) {this.id=id;this.boxNo=boxNo;this.userId=userId;this.masterUserId=masterUserId;this.roomId=roomId;this.roomNo=roomNo;this.buildingId=buildingId;this.buildingName=buildingName;this.dormitoryAreaId=dormitoryAreaId;this.dormitoryAreaName=dormitoryAreaName;this.campusId=campusId;this.campusName=campusName;this.creditLine=creditLine;this.createTime=createTime;this.updateTime=updateTime;this.status=status;this.boxGoodsList=boxGoodsList;this.userName=userName;this.masterUserMobile=masterUserMobile;this.userMobile=userMobile}}
export class BoxBundle { constructor(id,status,bundleName,bundleIdentifier,bundleBarCode,bundleQuantity,bundleAmount,orgId,adminId,createTime,createAuthUserId,goodsList) {this.id=id;this.status=status;this.bundleName=bundleName;this.bundleIdentifier=bundleIdentifier;this.bundleBarCode=bundleBarCode;this.bundleQuantity=bundleQuantity;this.bundleAmount=bundleAmount;this.orgId=orgId;this.adminId=adminId;this.createTime=createTime;this.createAuthUserId=createAuthUserId;this.goodsList=goodsList}}
export class BoxBundleGoods { constructor(id,bundleGoodsId,goodsName,goodsImg,goodsNo,goodsId,goodsExtendId,quantity,sellPrice,costPrice,orgId,adminId) {this.id=id;this.bundleGoodsId=bundleGoodsId;this.goodsName=goodsName;this.goodsImg=goodsImg;this.goodsNo=goodsNo;this.goodsId=goodsId;this.goodsExtendId=goodsExtendId;this.quantity=quantity;this.sellPrice=sellPrice;this.costPrice=costPrice;this.orgId=orgId;this.adminId=adminId}}
export class BoxBundleStatistic { constructor(id,name,count) {this.id=id;this.name=name;this.count=count}}
export class BoxBundleStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxGoods { constructor(id,boxId,goodsId,goodsNo,goodsBarNo,goodsName,goodsImage,sellPrice,stock) {this.id=id;this.boxId=boxId;this.goodsId=goodsId;this.goodsNo=goodsNo;this.goodsBarNo=goodsBarNo;this.goodsName=goodsName;this.goodsImage=goodsImage;this.sellPrice=sellPrice;this.stock=stock}}
export class BoxLog { constructor() {}}
export class BoxOperationLog { constructor(id,boxId,operationId,operationTime,operationType,memo) {this.id=id;this.boxId=boxId;this.operationId=operationId;this.operationTime=operationTime;this.operationType=operationType;this.memo=memo}}
export class BoxOperationType { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxOrder { constructor(id,orderNo,status,type,createTime,orderAmount,realAmount,payAccountNo,payAppliedTime,paidTime,tradeNo,payStatus,cancelTime,cancelReason,cancelStaffId,userName,mobile,roomId,roomNo,buildingId,dormitoryAreaId,campusId,orgId,adminId,campusName,address,orderPayType) {this.id=id;this.orderNo=orderNo;this.status=status;this.type=type;this.createTime=createTime;this.orderAmount=orderAmount;this.realAmount=realAmount;this.payAccountNo=payAccountNo;this.payAppliedTime=payAppliedTime;this.paidTime=paidTime;this.tradeNo=tradeNo;this.payStatus=payStatus;this.cancelTime=cancelTime;this.cancelReason=cancelReason;this.cancelStaffId=cancelStaffId;this.userName=userName;this.mobile=mobile;this.roomId=roomId;this.roomNo=roomNo;this.buildingId=buildingId;this.dormitoryAreaId=dormitoryAreaId;this.campusId=campusId;this.orgId=orgId;this.adminId=adminId;this.campusName=campusName;this.address=address;this.orderPayType=orderPayType}}
export class BoxOrderBase<T> { constructor(boxRoomOrderId,client,balancePay,promoId,payType,userId,goodsList) {this.boxRoomOrderId=boxRoomOrderId;this.client=client;this.balancePay=balancePay;this.promoId=promoId;this.payType=payType;this.userId=userId;this.goodsList=goodsList}}
export class BoxOrderCancelParam { constructor(orderId,userId,cancelStaffId,userType,cancelReason,fromStatus,toStatus,fromPayStatus,toPayStatus) {this.orderId=orderId;this.userId=userId;this.cancelStaffId=cancelStaffId;this.userType=userType;this.cancelReason=cancelReason;this.fromStatus=fromStatus;this.toStatus=toStatus;this.fromPayStatus=fromPayStatus;this.toPayStatus=toPayStatus}}
export class BoxOrderGoods { constructor(id,boxRoomOrderGoodsId,orderId,goodsNo,goodsName,goodsImg,sellPrice,costPrice,realPrice) {this.id=id;this.boxRoomOrderGoodsId=boxRoomOrderGoodsId;this.orderId=orderId;this.goodsNo=goodsNo;this.goodsName=goodsName;this.goodsImg=goodsImg;this.sellPrice=sellPrice;this.costPrice=costPrice;this.realPrice=realPrice}}
export class BoxOrderGoodsBase { constructor(goodsId,quantity) {this.goodsId=goodsId;this.quantity=quantity}}
export class BoxOrderGoodsCompletePaidParam { constructor(orderNo,transactionNo,accountNo,userId,fromStatus,toStatus,fromPayStatus,toPayStatus) {this.orderNo=orderNo;this.transactionNo=transactionNo;this.accountNo=accountNo;this.userId=userId;this.fromStatus=fromStatus;this.toStatus=toStatus;this.fromPayStatus=fromPayStatus;this.toPayStatus=toPayStatus}}
export class BoxOrderGoodsPlacedParam { constructor(placedBoxOrderGoodsItemId,placedBoxRoomOrderGoodsId,placedGoodsNum) {this.placedBoxOrderGoodsItemId=placedBoxOrderGoodsItemId;this.placedBoxRoomOrderGoodsId=placedBoxRoomOrderGoodsId;this.placedGoodsNum=placedGoodsNum}}
export class BoxOrderQueryParam { constructor(boxRoomOrderId,adminId,orgId,orderNo,roomNo,campusId,dormitoryAreaId,buildingId,mobile,userName,boxOrderStatusList,payStatus) {this.boxRoomOrderId=boxRoomOrderId;this.adminId=adminId;this.orgId=orgId;this.orderNo=orderNo;this.roomNo=roomNo;this.campusId=campusId;this.dormitoryAreaId=dormitoryAreaId;this.buildingId=buildingId;this.mobile=mobile;this.userName=userName;this.boxOrderStatusList=boxOrderStatusList;this.payStatus=payStatus}}
export class BoxOrderStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxOrderType { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxRegisterReq { constructor(masterUserId,mobile,userId,roomNo,roomId,buildingId) {this.masterUserId=masterUserId;this.mobile=mobile;this.userId=userId;this.roomNo=roomNo;this.roomId=roomId;this.buildingId=buildingId}}
export class BoxRoom { constructor(id,roomNo,buildingId,buildingName,dormitoryAreaId,dormitoryAreaName,campusId,campusName,createTime,status,updateTime,currentBoxId,nextBoxId,buildingManagerTrueName,currentBoxRoomOrder) {this.id=id;this.roomNo=roomNo;this.buildingId=buildingId;this.buildingName=buildingName;this.dormitoryAreaId=dormitoryAreaId;this.dormitoryAreaName=dormitoryAreaName;this.campusId=campusId;this.campusName=campusName;this.createTime=createTime;this.status=status;this.updateTime=updateTime;this.currentBoxId=currentBoxId;this.nextBoxId=nextBoxId;this.buildingManagerTrueName=buildingManagerTrueName;this.currentBoxRoomOrder=currentBoxRoomOrder}}
export class BoxRoomAuditLog { constructor(id,roomId,operationId,operationTime,operationType,memo) {this.id=id;this.roomId=roomId;this.operationId=operationId;this.operationTime=operationTime;this.operationType=operationType;this.memo=memo}}
export class BoxRoomBase { constructor(roomId,createUserId,bundleId) {this.roomId=roomId;this.createUserId=createUserId;this.bundleId=bundleId}}
export class BoxRoomLog { constructor() {}}
export class BoxRoomOperationType { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxRoomOrder { constructor(id,orderNo,createUserType,createUserId,createTime,updateTime,paidUpTime,status,roomId,roomNo,buildingId,dormitoryAreaId,campusId,orgId,adminId,bundleGoodsId,bundleGoodsName,goodsList) {this.id=id;this.orderNo=orderNo;this.createUserType=createUserType;this.createUserId=createUserId;this.createTime=createTime;this.updateTime=updateTime;this.paidUpTime=paidUpTime;this.status=status;this.roomId=roomId;this.roomNo=roomNo;this.buildingId=buildingId;this.dormitoryAreaId=dormitoryAreaId;this.campusId=campusId;this.orgId=orgId;this.adminId=adminId;this.bundleGoodsId=bundleGoodsId;this.bundleGoodsName=bundleGoodsName;this.goodsList=goodsList}}
export class BoxRoomOrderAccount { constructor(orderAmount,paidAmount,payableAmount,diffAmount) {this.orderAmount=orderAmount;this.paidAmount=paidAmount;this.payableAmount=payableAmount;this.diffAmount=diffAmount}}
export class BoxRoomOrderAuditLog { constructor(id,roomOrderId,operationId,operationTime,operationType,memo) {this.id=id;this.roomOrderId=roomOrderId;this.operationId=operationId;this.operationTime=operationTime;this.operationType=operationType;this.memo=memo}}
export class BoxRoomOrderBatchAuditLog { constructor(orderIdList) {this.orderIdList=orderIdList}}
export class BoxRoomOrderFace { constructor(totalPrice,campusName,address,createTimeNew,bundleIdentifier,mobile,completeTime,distributionTime,deliveryTime,username,actuallyAccount,payableAccount,unpaidAccount,checkTime,qrCode) {this.totalPrice=totalPrice;this.campusName=campusName;this.address=address;this.createTimeNew=createTimeNew;this.bundleIdentifier=bundleIdentifier;this.mobile=mobile;this.completeTime=completeTime;this.distributionTime=distributionTime;this.deliveryTime=deliveryTime;this.username=username;this.actuallyAccount=actuallyAccount;this.payableAccount=payableAccount;this.unpaidAccount=unpaidAccount;this.checkTime=checkTime;this.qrCode=qrCode}}
export class BoxRoomOrderGoods { constructor(id,orderId,goodsId,goodsExtendId,goodsNo,goodsName,goodsImg,sellPrice,costPrice,originQuantity,residueQuantity,actualReturnQuantity,img,barCodes) {this.id=id;this.orderId=orderId;this.goodsId=goodsId;this.goodsExtendId=goodsExtendId;this.goodsNo=goodsNo;this.goodsName=goodsName;this.goodsImg=goodsImg;this.sellPrice=sellPrice;this.costPrice=costPrice;this.originQuantity=originQuantity;this.residueQuantity=residueQuantity;this.actualReturnQuantity=actualReturnQuantity;this.img=img;this.barCodes=barCodes}}
export class BoxRoomOrderGoodsReturn { constructor(goodsId,actualReturnQuantity) {this.goodsId=goodsId;this.actualReturnQuantity=actualReturnQuantity}}
export class BoxRoomOrderOperationType { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxRoomOrderQueryParam { constructor(campusIds,areaId,buildingIds,roomId,statusList,beginTime,endTime,status,flag,orderNo,adminId) {this.campusIds=campusIds;this.areaId=areaId;this.buildingIds=buildingIds;this.roomId=roomId;this.statusList=statusList;this.beginTime=beginTime;this.endTime=endTime;this.status=status;this.flag=flag;this.orderNo=orderNo;this.adminId=adminId}}
export class BoxRoomOrderStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxRoomStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxTally { constructor(id,boxId,createTime,status,boxTallyGoodsList) {this.id=id;this.boxId=boxId;this.createTime=createTime;this.status=status;this.boxTallyGoodsList=boxTallyGoodsList}}
export class BoxTallyGoods { constructor(id,boxTallyId,goodsId,goodsNo,goodsBarNo,goodsName,goodsImage,sellPrice,quantity,stock,nightStock) {this.id=id;this.boxTallyId=boxTallyId;this.goodsId=goodsId;this.goodsNo=goodsNo;this.goodsBarNo=goodsBarNo;this.goodsName=goodsName;this.goodsImage=goodsImage;this.sellPrice=sellPrice;this.quantity=quantity;this.stock=stock;this.nightStock=nightStock}}
export class BoxTallyOperationLog { constructor(id,boxTallyId,operationId,operationTime,operationType,memo) {this.id=id;this.boxTallyId=boxTallyId;this.operationId=operationId;this.operationTime=operationTime;this.operationType=operationType;this.memo=memo}}
export class BoxTallyStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class BoxUserType { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class GoodsStockLog { constructor() {}}
export class Member { constructor(userId,trueName,telephone,mobile,area,contactAddr,qq,msn,sex,birthday,groupId,exp,point,time,status,balance,loanBalance,lastLogin,custom,signTime,signCount,signDateFlag,messageIds,prop) {this.userId=userId;this.trueName=trueName;this.telephone=telephone;this.mobile=mobile;this.area=area;this.contactAddr=contactAddr;this.qq=qq;this.msn=msn;this.sex=sex;this.birthday=birthday;this.groupId=groupId;this.exp=exp;this.point=point;this.time=time;this.status=status;this.balance=balance;this.loanBalance=loanBalance;this.lastLogin=lastLogin;this.custom=custom;this.signTime=signTime;this.signCount=signCount;this.signDateFlag=signDateFlag;this.messageIds=messageIds;this.prop=prop}}
export class NextBoxRoom { constructor(boxUserType) {this.boxUserType=boxUserType}}
export class OrderCompletedPayUpdateParam { constructor(transactionNo,userPayAccountNo) {this.transactionNo=transactionNo;this.userPayAccountNo=userPayAccountNo}}
export class OrderPayStatus { constructor(intValue,name) {this.intValue=intValue;this.name=name}}
export class OrderQuery { constructor(userId,orderTypeList,orderStatusList,startTime,endTime,page,size) {this.userId=userId;this.orderTypeList=orderTypeList;this.orderStatusList=orderStatusList;this.startTime=startTime;this.endTime=endTime;this.page=page;this.size=size}}
export class OrderUpdateParam { constructor(orderId,userId,orderType,orderNo,fromPayStatus,fromStatus,toStatus,toPayStatus) {this.orderId=orderId;this.userId=userId;this.orderType=orderType;this.orderNo=orderNo;this.fromPayStatus=fromPayStatus;this.fromStatus=fromStatus;this.toStatus=toStatus;this.toPayStatus=toPayStatus}}
export class SchoolManager { constructor(id,name,areaId) {this.id=id;this.name=name;this.areaId=areaId}}
export class StoreBuildingRelation { constructor(id,orgId,campusId,campusName,areaId,areaName,buildingId,buildingName,authUserId,authUserName) {this.id=id;this.orgId=orgId;this.campusId=campusId;this.campusName=campusName;this.areaId=areaId;this.areaName=areaName;this.buildingId=buildingId;this.buildingName=buildingName;this.authUserId=authUserId;this.authUserName=authUserName}}
export class UserAccounts { constructor(id,uid,addtime,source,money,orderId,balance,payType,orderNo,loanBalance) {this.id=id;this.uid=uid;this.addtime=addtime;this.source=source;this.money=money;this.orderId=orderId;this.balance=balance;this.payType=payType;this.orderNo=orderNo;this.loanBalance=loanBalance}}
export class UserBox { constructor(buttonList) {this.buttonList=buttonList}}
export class UserRequest { constructor(id,username,trueName,password,mobile,idCard,address,orgId,areaId,areas,userType,buildings) {this.id=id;this.username=username;this.trueName=trueName;this.password=password;this.mobile=mobile;this.idCard=idCard;this.address=address;this.orgId=orgId;this.areaId=areaId;this.areas=areas;this.userType=userType;this.buildings=buildings}}